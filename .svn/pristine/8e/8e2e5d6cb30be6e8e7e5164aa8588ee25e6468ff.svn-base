//
// Prefix header for all source files of the 'WhistleIm' target in the 'WhistleIm' project
//

#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
#endif

#import <Bizlayer/Bizlayer.h>
#import "LoggerClient.h"
#import "Manager.h"

//单例对象定义的宏
#define SINGLETON_DEFINE(className) +(className *)shareInstance;

#define SINGLETON_IMPLEMENT(className) \
static className* _instance = nil; \
+ (className *) shareInstance{\
static dispatch_once_t onceToken; \
dispatch_once(&onceToken, ^{ _instance = [[self alloc] init];}); return _instance;\
}\
+ (id)allocWithZone:(NSZone *)zone{@synchronized(self) {if (_instance == nil) {_instance = [super allocWithZone:zone];return _instance;}}return nil;} \
- (id)copyWithZone:(NSZone *)zone{return self;}


#define DEBUG_//打开日志输出宏

//#define NSLOG_NO_DEBUG_  //关闭NSLog的输出

#define DEBUG_LEVEL_FATAL   0
#define DEBUG_LEVEL_ERROR   1
#define DEBUG_LEVEL_WARNING 2
#define DEBUG_LEVEL_DEBUG   3
#define DEBUG_LEVEL_INFO    4

#define DEBUG_LEVEL DEBUG_LEVEL_INFO//设置日志输出级别

#ifdef DEBUG_

#define DEBUG_INFO_DETAIL_   //是否打开输出info类的详细信息


//需要修改的宏
#define IP  @"127.0.0.1"//@"172.16.116.114"//设置为输出日志电脑的IP



//初始化日志
#define INIT_LOG(code) do{    \
    static dispatch_once_t onceToken; dispatch_once(&onceToken, ^{LoggerSetViewerHost(NULL, (__bridge CFStringRef)IP, 50000); LoggerSetOptions(NULL, \
    /*kLoggerOption_CaptureSystemConsole | */kLoggerOption_BufferLogsUntilConnection | kLoggerOption_UseSSL);  \
    LoggerSetBufferFile(NULL, (__bridge CFStringRef)[Manager getMainFolder4Log]); /*LoggerFlush(NULL, YES);*/});    \
    code; } while(0)

//原始日志定义
#define LOG_NETWORK(level, ...)     INIT_LOG(LogMessageF(__FILE__,__LINE__,__FUNCTION__,@"network",level,__VA_ARGS__))
#define LOG_GENERAL(level, ...)     INIT_LOG(LogMessageF(__FILE__,__LINE__,__FUNCTION__,@"general",level,__VA_ARGS__))
#define LOG_UI(level, ...)          INIT_LOG(LogMessageF(__FILE__,__LINE__,__FUNCTION__,@"ui",level,__VA_ARGS__))


#ifdef NSLOG_NO_DEBUG_
#define NSLog(...) do{}while(0)
#endif

#else

#define NSLog(...) do{}while(0)

#define LOG_NETWORK(level, ...)     do{}while(0)
#define LOG_GENERAL(level, ...)     do{}while(0)
#define LOG_UI(level, ...)          do{}while(0)

#endif

#define LOG_NETWORK_FATAL(...)      do{if(DEBUG_LEVEL >= DEBUG_LEVEL_FATAL){LOG_NETWORK(DEBUG_LEVEL_FATAL, __VA_ARGS__);}} while(0)
#define LOG_NETWORK_ERROR(...)      do{if(DEBUG_LEVEL >= DEBUG_LEVEL_ERROR){ LOG_NETWORK(DEBUG_LEVEL_ERROR, __VA_ARGS__);}} while(0)
#define LOG_NETWORK_WARNING(...)    do{if(DEBUG_LEVEL >= DEBUG_LEVEL_WARNING){ LOG_NETWORK(DEBUG_LEVEL_WARNING, __VA_ARGS__);}} while(0)
#define LOG_NETWORK_DEBUG(...)      do{if(DEBUG_LEVEL >= DEBUG_LEVEL_DEBUG){ LOG_NETWORK(DEBUG_LEVEL_DEBUG, __VA_ARGS__);}} while(0)
#define LOG_NETWORK_INFO(...)       do{if(DEBUG_LEVEL >= DEBUG_LEVEL_INFO){ LOG_NETWORK(DEBUG_LEVEL_INFO, __VA_ARGS__);}} while(0)


#define LOG_GENERAL_FATAL(...)      do{if(DEBUG_LEVEL >= DEBUG_LEVEL_FATAL){LOG_GENERAL(DEBUG_LEVEL_FATAL, __VA_ARGS__);}} while(0)
#define LOG_GENERAL_ERROR(...)      do{if(DEBUG_LEVEL >= DEBUG_LEVEL_ERROR){ LOG_GENERAL(DEBUG_LEVEL_ERROR, __VA_ARGS__);}} while(0)
#define LOG_GENERAL_WARNING(...)    do{if(DEBUG_LEVEL >= DEBUG_LEVEL_WARNING){ LOG_NETWORK(DEBUG_LEVEL_WARNING, __VA_ARGS__);}} while(0)
#define LOG_GENERAL_DEBUG(...)      do{if(DEBUG_LEVEL >= DEBUG_LEVEL_DEBUG){ LOG_GENERAL(DEBUG_LEVEL_DEBUG, __VA_ARGS__);}} while(0)
#define LOG_GENERAL_INFO(...)       do{if(DEBUG_LEVEL >= DEBUG_LEVEL_INFO){ LOG_GENERAL(DEBUG_LEVEL_INFO, __VA_ARGS__);}} while(0)

#define LOG_UI_FATAL(...)           do{if(DEBUG_LEVEL >= DEBUG_LEVEL_FATAL){LOG_UI(DEBUG_LEVEL_FATAL, __VA_ARGS__);}} while(0)
#define LOG_UI_ERROR(...)           do{if(DEBUG_LEVEL >= DEBUG_LEVEL_ERROR){ LOG_UI(DEBUG_LEVEL_ERROR, __VA_ARGS__);}} while(0)
#define LOG_UI_WARNING(...)         do{if(DEBUG_LEVEL >= DEBUG_LEVEL_WARNING){ LOG_UI(DEBUG_LEVEL_WARNING, __VA_ARGS__);}} while(0)
#define LOG_UI_DEBUG(...)           do{if(DEBUG_LEVEL >= DEBUG_LEVEL_DEBUG){ LOG_UI(DEBUG_LEVEL_DEBUG, __VA_ARGS__);}} while(0)
#define LOG_UI_INFO(...)            do{if(DEBUG_LEVEL >= DEBUG_LEVEL_INFO){ LOG_UI(DEBUG_LEVEL_INFO, __VA_ARGS__);}} while(0)

#import "GetFrame.h"
#define  isIOS7 ([[GetFrame shareInstance] isIOS7Version])
#define  is4Inch ([[GetFrame shareInstance] is4InchScreen])
//控制器导航高度
#define NAVIGATION_BAR_HEIGHT 44.0f

#import "CommonBackGroudView.h"
#import "CustomAlertView.h"

